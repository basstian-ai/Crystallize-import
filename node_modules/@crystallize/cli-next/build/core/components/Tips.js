import { Box, Newline, Text } from 'ink';
import Link from 'ink-link';
import { useEffect, useState } from 'react';
import fetchTips, { staticTips } from '../use-cases/fetchTips.js';
import React from 'react';
export const Tips = () => {
    const [tips, setTips] = useState(staticTips);
    const [tipIndex, setTipIndex] = useState(0);
    useEffect(() => {
        fetchTips().then((tips) => setTips(tips));
    }, []);
    useEffect(() => {
        const interval = setInterval(() => {
            setTipIndex(Math.floor(Math.random() * (tips.length - 1)));
        }, 4000);
        return () => clearInterval(interval);
    });
    if (tips.length === 0) {
        return null;
    }
    const tip = tips[tipIndex];
    return (React.createElement(React.Fragment, null,
        React.createElement(Newline, null),
        React.createElement(Text, { dimColor: true }, "--------------------------------------"),
        React.createElement(Box, null,
            React.createElement(Text, { italic: true, dimColor: true },
                React.createElement(Text, null,
                    tip.type === 'blogPost' && `Catch up on our blog post: "${tip.title}"`,
                    tip.type === 'comic' && `Like comics? Check this out: "${tip.title}"`,
                    tip.type === '' && `${tip.title}`,
                    React.createElement(Newline, null),
                    React.createElement(Link, { url: tip.url }, tip.url))))));
};
