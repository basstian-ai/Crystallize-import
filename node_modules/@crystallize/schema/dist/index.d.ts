import { z } from 'zod';

declare const BooleanContentInputSchema: z.ZodObject<{
    value: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    value: boolean;
}, {
    value: boolean;
}>;
type BooleanContentInput = z.infer<typeof BooleanContentInputSchema>;

type ContentChunkContentInput = {
    chunks: ComponentInput[][];
};

declare const DatetimeContentInputSchema: z.ZodObject<{
    datetime: z.ZodEffects<z.ZodString, string, string>;
}, "strip", z.ZodTypeAny, {
    datetime: string;
}, {
    datetime: string;
}>;
type DatetimeContentInput = z.infer<typeof DatetimeContentInputSchema>;

declare const FileInputSchema: z.ZodObject<{
    key: z.ZodString;
    title: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    key: string;
    title?: string | undefined;
}, {
    key: string;
    title?: string | undefined;
}>;
type FileInput = z.infer<typeof FileInputSchema>;

declare const GridRelationsContentInputSchema: z.ZodObject<{
    gridIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    gridIds?: string[] | undefined;
}, {
    gridIds?: string[] | undefined;
}>;
type GridRelationsContentInput = z.infer<typeof GridRelationsContentInputSchema>;

declare const ImageInputSchema: z.ZodObject<{
    key: z.ZodString;
    caption: z.ZodOptional<z.ZodEffects<z.ZodObject<{
        html: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        json: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        html?: string[] | undefined;
        json?: string[] | undefined;
    }, {
        html?: string[] | undefined;
        json?: string[] | undefined;
    }>, {
        html?: string[] | undefined;
        json?: string[] | undefined;
    }, {
        html?: string[] | undefined;
        json?: string[] | undefined;
    }>>;
    altText: z.ZodOptional<z.ZodString>;
    mimeType: z.ZodOptional<z.ZodString>;
    meta: z.ZodOptional<z.ZodArray<z.ZodObject<{
        key: z.ZodString;
        value: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        key: string;
        value?: string | undefined;
    }, {
        key: string;
        value?: string | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    key: string;
    caption?: {
        html?: string[] | undefined;
        json?: string[] | undefined;
    } | undefined;
    altText?: string | undefined;
    mimeType?: string | undefined;
    meta?: {
        key: string;
        value?: string | undefined;
    }[] | undefined;
}, {
    key: string;
    caption?: {
        html?: string[] | undefined;
        json?: string[] | undefined;
    } | undefined;
    altText?: string | undefined;
    mimeType?: string | undefined;
    meta?: {
        key: string;
        value?: string | undefined;
    }[] | undefined;
}>;
type ImageInput = z.infer<typeof ImageInputSchema>;

declare const ItemRelationsContentInputSchema: z.ZodObject<{
    itemIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    skus: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    itemIds?: string[] | undefined;
    skus?: string[] | undefined;
}, {
    itemIds?: string[] | undefined;
    skus?: string[] | undefined;
}>;
type ItemRelationsContentInput = z.infer<typeof ItemRelationsContentInputSchema>;

declare const LocationContentInputSchema: z.ZodObject<{
    lat: z.ZodOptional<z.ZodNumber>;
    long: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    lat?: number | undefined;
    long?: number | undefined;
}, {
    lat?: number | undefined;
    long?: number | undefined;
}>;
type LocationContentInput = z.infer<typeof LocationContentInputSchema>;

declare const NumericComponentContentInputSchema: z.ZodObject<{
    number: z.ZodNumber;
    unit: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    number: number;
    unit?: string | undefined;
}, {
    number: number;
    unit?: string | undefined;
}>;
type NumericComponentContentInput = z.infer<typeof NumericComponentContentInputSchema>;

declare const ParagraphCollectionContentInputSchema: z.ZodObject<{
    paragraphs: z.ZodOptional<z.ZodArray<z.ZodObject<{
        body: z.ZodOptional<z.ZodEffects<z.ZodObject<{
            html: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            json: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            html?: string[] | undefined;
            json?: string[] | undefined;
        }, {
            html?: string[] | undefined;
            json?: string[] | undefined;
        }>, {
            html?: string[] | undefined;
            json?: string[] | undefined;
        }, {
            html?: string[] | undefined;
            json?: string[] | undefined;
        }>>;
        images: z.ZodOptional<z.ZodArray<z.ZodObject<{
            key: z.ZodString;
            caption: z.ZodOptional<z.ZodEffects<z.ZodObject<{
                html: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                json: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                html?: string[] | undefined;
                json?: string[] | undefined;
            }, {
                html?: string[] | undefined;
                json?: string[] | undefined;
            }>, {
                html?: string[] | undefined;
                json?: string[] | undefined;
            }, {
                html?: string[] | undefined;
                json?: string[] | undefined;
            }>>;
            altText: z.ZodOptional<z.ZodString>;
            mimeType: z.ZodOptional<z.ZodString>;
            meta: z.ZodOptional<z.ZodArray<z.ZodObject<{
                key: z.ZodString;
                value: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                key: string;
                value?: string | undefined;
            }, {
                key: string;
                value?: string | undefined;
            }>, "many">>;
        }, "strip", z.ZodTypeAny, {
            key: string;
            caption?: {
                html?: string[] | undefined;
                json?: string[] | undefined;
            } | undefined;
            altText?: string | undefined;
            mimeType?: string | undefined;
            meta?: {
                key: string;
                value?: string | undefined;
            }[] | undefined;
        }, {
            key: string;
            caption?: {
                html?: string[] | undefined;
                json?: string[] | undefined;
            } | undefined;
            altText?: string | undefined;
            mimeType?: string | undefined;
            meta?: {
                key: string;
                value?: string | undefined;
            }[] | undefined;
        }>, "many">>;
        title: z.ZodOptional<z.ZodObject<{
            text: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            text?: string | undefined;
        }, {
            text?: string | undefined;
        }>>;
        videos: z.ZodOptional<z.ZodArray<z.ZodObject<{
            key: z.ZodString;
            thumbnails: z.ZodOptional<z.ZodArray<z.ZodObject<{
                key: z.ZodString;
                caption: z.ZodOptional<z.ZodEffects<z.ZodObject<{
                    html: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    json: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                }, {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                }>, {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                }, {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                }>>;
                altText: z.ZodOptional<z.ZodString>;
                mimeType: z.ZodOptional<z.ZodString>;
                meta: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    key: z.ZodString;
                    value: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    key: string;
                    value?: string | undefined;
                }, {
                    key: string;
                    value?: string | undefined;
                }>, "many">>;
            }, "strip", z.ZodTypeAny, {
                key: string;
                caption?: {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                } | undefined;
                altText?: string | undefined;
                mimeType?: string | undefined;
                meta?: {
                    key: string;
                    value?: string | undefined;
                }[] | undefined;
            }, {
                key: string;
                caption?: {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                } | undefined;
                altText?: string | undefined;
                mimeType?: string | undefined;
                meta?: {
                    key: string;
                    value?: string | undefined;
                }[] | undefined;
            }>, "many">>;
            title: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            key: string;
            thumbnails?: {
                key: string;
                caption?: {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                } | undefined;
                altText?: string | undefined;
                mimeType?: string | undefined;
                meta?: {
                    key: string;
                    value?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            title?: string | undefined;
        }, {
            key: string;
            thumbnails?: {
                key: string;
                caption?: {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                } | undefined;
                altText?: string | undefined;
                mimeType?: string | undefined;
                meta?: {
                    key: string;
                    value?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            title?: string | undefined;
        }>, "many">>;
    }, "strip", z.ZodTypeAny, {
        body?: {
            html?: string[] | undefined;
            json?: string[] | undefined;
        } | undefined;
        images?: {
            key: string;
            caption?: {
                html?: string[] | undefined;
                json?: string[] | undefined;
            } | undefined;
            altText?: string | undefined;
            mimeType?: string | undefined;
            meta?: {
                key: string;
                value?: string | undefined;
            }[] | undefined;
        }[] | undefined;
        title?: {
            text?: string | undefined;
        } | undefined;
        videos?: {
            key: string;
            thumbnails?: {
                key: string;
                caption?: {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                } | undefined;
                altText?: string | undefined;
                mimeType?: string | undefined;
                meta?: {
                    key: string;
                    value?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            title?: string | undefined;
        }[] | undefined;
    }, {
        body?: {
            html?: string[] | undefined;
            json?: string[] | undefined;
        } | undefined;
        images?: {
            key: string;
            caption?: {
                html?: string[] | undefined;
                json?: string[] | undefined;
            } | undefined;
            altText?: string | undefined;
            mimeType?: string | undefined;
            meta?: {
                key: string;
                value?: string | undefined;
            }[] | undefined;
        }[] | undefined;
        title?: {
            text?: string | undefined;
        } | undefined;
        videos?: {
            key: string;
            thumbnails?: {
                key: string;
                caption?: {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                } | undefined;
                altText?: string | undefined;
                mimeType?: string | undefined;
                meta?: {
                    key: string;
                    value?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            title?: string | undefined;
        }[] | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    paragraphs?: {
        body?: {
            html?: string[] | undefined;
            json?: string[] | undefined;
        } | undefined;
        images?: {
            key: string;
            caption?: {
                html?: string[] | undefined;
                json?: string[] | undefined;
            } | undefined;
            altText?: string | undefined;
            mimeType?: string | undefined;
            meta?: {
                key: string;
                value?: string | undefined;
            }[] | undefined;
        }[] | undefined;
        title?: {
            text?: string | undefined;
        } | undefined;
        videos?: {
            key: string;
            thumbnails?: {
                key: string;
                caption?: {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                } | undefined;
                altText?: string | undefined;
                mimeType?: string | undefined;
                meta?: {
                    key: string;
                    value?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            title?: string | undefined;
        }[] | undefined;
    }[] | undefined;
}, {
    paragraphs?: {
        body?: {
            html?: string[] | undefined;
            json?: string[] | undefined;
        } | undefined;
        images?: {
            key: string;
            caption?: {
                html?: string[] | undefined;
                json?: string[] | undefined;
            } | undefined;
            altText?: string | undefined;
            mimeType?: string | undefined;
            meta?: {
                key: string;
                value?: string | undefined;
            }[] | undefined;
        }[] | undefined;
        title?: {
            text?: string | undefined;
        } | undefined;
        videos?: {
            key: string;
            thumbnails?: {
                key: string;
                caption?: {
                    html?: string[] | undefined;
                    json?: string[] | undefined;
                } | undefined;
                altText?: string | undefined;
                mimeType?: string | undefined;
                meta?: {
                    key: string;
                    value?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            title?: string | undefined;
        }[] | undefined;
    }[] | undefined;
}>;
type ParagraphCollectionContentInput = z.infer<typeof ParagraphCollectionContentInputSchema>;

declare const PropertiesTableContentInputSchema: z.ZodObject<{
    sections: z.ZodOptional<z.ZodArray<z.ZodObject<{
        properties: z.ZodOptional<z.ZodArray<z.ZodObject<{
            key: z.ZodString;
            value: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            key: string;
            value?: string | undefined;
        }, {
            key: string;
            value?: string | undefined;
        }>, "many">>;
        title: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        properties?: {
            key: string;
            value?: string | undefined;
        }[] | undefined;
        title?: string | undefined;
    }, {
        properties?: {
            key: string;
            value?: string | undefined;
        }[] | undefined;
        title?: string | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    sections?: {
        properties?: {
            key: string;
            value?: string | undefined;
        }[] | undefined;
        title?: string | undefined;
    }[] | undefined;
}, {
    sections?: {
        properties?: {
            key: string;
            value?: string | undefined;
        }[] | undefined;
        title?: string | undefined;
    }[] | undefined;
}>;
type PropertiesTableContentInput = z.infer<typeof PropertiesTableContentInputSchema>;

declare const RichTextContentInputSchema: z.ZodEffects<z.ZodObject<{
    html: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    json: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    html?: string[] | undefined;
    json?: string[] | undefined;
}, {
    html?: string[] | undefined;
    json?: string[] | undefined;
}>, {
    html?: string[] | undefined;
    json?: string[] | undefined;
}, {
    html?: string[] | undefined;
    json?: string[] | undefined;
}>;
type RichTextContentInput = z.infer<typeof RichTextContentInputSchema>;

declare const SelectionComponentContentInputSchema: z.ZodObject<{
    keys: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    keys: string[];
}, {
    keys: string[];
}>;
type SelectionComponentContentInput = z.infer<typeof SelectionComponentContentInputSchema>;

declare const SingleLineContentInputSchema: z.ZodObject<{
    text: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    text?: string | undefined;
}, {
    text?: string | undefined;
}>;
type SingleLineContentInput = z.infer<typeof SingleLineContentInputSchema>;

declare const VideoInputSchema: z.ZodObject<{
    key: z.ZodString;
    thumbnails: z.ZodOptional<z.ZodArray<z.ZodObject<{
        key: z.ZodString;
        caption: z.ZodOptional<z.ZodEffects<z.ZodObject<{
            html: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            json: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            html?: string[] | undefined;
            json?: string[] | undefined;
        }, {
            html?: string[] | undefined;
            json?: string[] | undefined;
        }>, {
            html?: string[] | undefined;
            json?: string[] | undefined;
        }, {
            html?: string[] | undefined;
            json?: string[] | undefined;
        }>>;
        altText: z.ZodOptional<z.ZodString>;
        mimeType: z.ZodOptional<z.ZodString>;
        meta: z.ZodOptional<z.ZodArray<z.ZodObject<{
            key: z.ZodString;
            value: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            key: string;
            value?: string | undefined;
        }, {
            key: string;
            value?: string | undefined;
        }>, "many">>;
    }, "strip", z.ZodTypeAny, {
        key: string;
        caption?: {
            html?: string[] | undefined;
            json?: string[] | undefined;
        } | undefined;
        altText?: string | undefined;
        mimeType?: string | undefined;
        meta?: {
            key: string;
            value?: string | undefined;
        }[] | undefined;
    }, {
        key: string;
        caption?: {
            html?: string[] | undefined;
            json?: string[] | undefined;
        } | undefined;
        altText?: string | undefined;
        mimeType?: string | undefined;
        meta?: {
            key: string;
            value?: string | undefined;
        }[] | undefined;
    }>, "many">>;
    title: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    key: string;
    thumbnails?: {
        key: string;
        caption?: {
            html?: string[] | undefined;
            json?: string[] | undefined;
        } | undefined;
        altText?: string | undefined;
        mimeType?: string | undefined;
        meta?: {
            key: string;
            value?: string | undefined;
        }[] | undefined;
    }[] | undefined;
    title?: string | undefined;
}, {
    key: string;
    thumbnails?: {
        key: string;
        caption?: {
            html?: string[] | undefined;
            json?: string[] | undefined;
        } | undefined;
        altText?: string | undefined;
        mimeType?: string | undefined;
        meta?: {
            key: string;
            value?: string | undefined;
        }[] | undefined;
    }[] | undefined;
    title?: string | undefined;
}>;
type VideoInput = z.infer<typeof VideoInputSchema>;

type ComponentInput = {
    componentId: string;
    files?: FileInput[];
    images?: ImageInput[];
    videos?: VideoInput[];
    componentChoice?: ComponentInput;
    contentChunk?: ContentChunkContentInput;
    boolean?: BooleanContentInput;
    datetime?: DatetimeContentInput;
    gridRelations?: GridRelationsContentInput;
    itemRelations?: ItemRelationsContentInput;
    location?: LocationContentInput;
    numeric?: NumericComponentContentInput;
    paragraphCollection?: ParagraphCollectionContentInput;
    propertiesTable?: PropertiesTableContentInput;
    richText?: RichTextContentInput;
    selection?: SelectionComponentContentInput;
    singleLine?: SingleLineContentInput;
};

declare const MinMaxComponentConfigSchema: z.ZodEffects<z.ZodEffects<z.ZodObject<{
    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>;
declare const MinMaxItemRelationsComponentConfigSchema: z.ZodEffects<z.ZodEffects<z.ZodObject<{
    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}>;
type ComponentChoiceComponentConfig = {
    choices: any[];
};
declare const ComponentChoiceComponentConfigInputSchema: z.ZodType<ComponentChoiceComponentConfig>;
type ContentChunkComponentConfig = {
    components: any[];
    repeatable?: boolean;
};
declare const ContentChunkComponentConfigInputSchema: z.ZodType<ContentChunkComponentConfig>;
declare const FileComponentConfigSchema: z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, z.ZodObject<{
    acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
        contentType: z.ZodString;
        extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        contentType: string;
        extensionLabel?: string | null | undefined;
    }, {
        contentType: string;
        extensionLabel?: string | null | undefined;
    }>, "many">>>;
    maxFileSize: z.ZodObject<{
        size: z.ZodNumber;
        unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
    }, "strip", z.ZodTypeAny, {
        size: number;
        unit: "Bytes" | "GiB" | "KiB" | "MiB";
    }, {
        size: number;
        unit: "Bytes" | "GiB" | "KiB" | "MiB";
    }>;
}, "strip", z.ZodTypeAny, {
    maxFileSize: {
        size: number;
        unit: "Bytes" | "GiB" | "KiB" | "MiB";
    };
    acceptedContentTypes?: {
        contentType: string;
        extensionLabel?: string | null | undefined;
    }[] | null | undefined;
}, {
    maxFileSize: {
        size: number;
        unit: "Bytes" | "GiB" | "KiB" | "MiB";
    };
    acceptedContentTypes?: {
        contentType: string;
        extensionLabel?: string | null | undefined;
    }[] | null | undefined;
}>>;
declare const ItemRelationsComponentConfigSchema: z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}>, z.ZodObject<{
    acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
    quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
        folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
            folderId: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            folderId: string;
        }, {
            folderId: string;
        }>, "many">>>;
    }, "strip", z.ZodTypeAny, {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    }, {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    acceptedShapeIdentifiers?: string[] | null | undefined;
    quickSelect?: {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    } | null | undefined;
}, {
    acceptedShapeIdentifiers?: string[] | null | undefined;
    quickSelect?: {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    } | null | undefined;
}>>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
} & {
    acceptedShapeIdentifiers?: string[] | null | undefined;
    quickSelect?: {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    } | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
} & {
    acceptedShapeIdentifiers?: string[] | null | undefined;
    quickSelect?: {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    } | null | undefined;
}>;
declare const NumericComponentConfigSchema: z.ZodObject<{
    decimalPlaces: z.ZodOptional<z.ZodNumber>;
    units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    decimalPlaces?: number | undefined;
    units?: string[] | undefined;
}, {
    decimalPlaces?: number | undefined;
    units?: string[] | undefined;
}>;
declare const PropertiesTableComponentConfigSchema: z.ZodObject<{
    sections: z.ZodArray<z.ZodObject<{
        title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        keys: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        keys: string[];
        title?: string | null | undefined;
    }, {
        keys: string[];
        title?: string | null | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    sections: {
        keys: string[];
        title?: string | null | undefined;
    }[];
}, {
    sections: {
        keys: string[];
        title?: string | null | undefined;
    }[];
}>;
declare const SelectionComponentConfigInputSchema: z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, z.ZodObject<{
    options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
        key: z.ZodString;
        value: z.ZodString;
        isPreselected: z.ZodDefault<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        key: string;
        isPreselected: boolean;
    }, {
        value: string;
        key: string;
        isPreselected?: boolean | undefined;
    }>, "many">>>;
}, "strip", z.ZodTypeAny, {
    options?: {
        value: string;
        key: string;
        isPreselected: boolean;
    }[] | null | undefined;
}, {
    options?: {
        value: string;
        key: string;
        isPreselected?: boolean | undefined;
    }[] | null | undefined;
}>>;
declare const ShapeComponentConfigInputSchema: z.ZodObject<{
    componentChoice: z.ZodOptional<z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>>;
    contentChunk: z.ZodOptional<z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>>;
    files: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
        min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, z.ZodObject<{
        acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
            contentType: z.ZodString;
            extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }, {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }>, "many">>>;
        maxFileSize: z.ZodObject<{
            size: z.ZodNumber;
            unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
        }, "strip", z.ZodTypeAny, {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        }, {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        }>;
    }, "strip", z.ZodTypeAny, {
        maxFileSize: {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        };
        acceptedContentTypes?: {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }[] | null | undefined;
    }, {
        maxFileSize: {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        };
        acceptedContentTypes?: {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }[] | null | undefined;
    }>>>;
    itemRelations: z.ZodOptional<z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
        min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }>, z.ZodObject<{
        acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
        quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
            folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                folderId: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                folderId: string;
            }, {
                folderId: string;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        }, {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        }>>>;
    }, "strip", z.ZodTypeAny, {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }, {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }>>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    } & {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    } & {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }>>;
    numeric: z.ZodOptional<z.ZodObject<{
        decimalPlaces: z.ZodOptional<z.ZodNumber>;
        units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        decimalPlaces?: number | undefined;
        units?: string[] | undefined;
    }, {
        decimalPlaces?: number | undefined;
        units?: string[] | undefined;
    }>>;
    propertiesTable: z.ZodOptional<z.ZodObject<{
        sections: z.ZodArray<z.ZodObject<{
            title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            keys: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            keys: string[];
            title?: string | null | undefined;
        }, {
            keys: string[];
            title?: string | null | undefined;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        sections: {
            keys: string[];
            title?: string | null | undefined;
        }[];
    }, {
        sections: {
            keys: string[];
            title?: string | null | undefined;
        }[];
    }>>;
    selection: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
        min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, z.ZodObject<{
        options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
            key: z.ZodString;
            value: z.ZodString;
            isPreselected: z.ZodDefault<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            key: string;
            isPreselected: boolean;
        }, {
            value: string;
            key: string;
            isPreselected?: boolean | undefined;
        }>, "many">>>;
    }, "strip", z.ZodTypeAny, {
        options?: {
            value: string;
            key: string;
            isPreselected: boolean;
        }[] | null | undefined;
    }, {
        options?: {
            value: string;
            key: string;
            isPreselected?: boolean | undefined;
        }[] | null | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    componentChoice?: ComponentChoiceComponentConfig | undefined;
    contentChunk?: ContentChunkComponentConfig | undefined;
    files?: ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        maxFileSize: {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        };
        acceptedContentTypes?: {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }[] | null | undefined;
    }) | undefined;
    itemRelations?: ({
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    } & {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }) | undefined;
    numeric?: {
        decimalPlaces?: number | undefined;
        units?: string[] | undefined;
    } | undefined;
    propertiesTable?: {
        sections: {
            keys: string[];
            title?: string | null | undefined;
        }[];
    } | undefined;
    selection?: ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        options?: {
            value: string;
            key: string;
            isPreselected: boolean;
        }[] | null | undefined;
    }) | undefined;
}, {
    componentChoice?: ComponentChoiceComponentConfig | undefined;
    contentChunk?: ContentChunkComponentConfig | undefined;
    files?: ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        maxFileSize: {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        };
        acceptedContentTypes?: {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }[] | null | undefined;
    }) | undefined;
    itemRelations?: ({
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    } & {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }) | undefined;
    numeric?: {
        decimalPlaces?: number | undefined;
        units?: string[] | undefined;
    } | undefined;
    propertiesTable?: {
        sections: {
            keys: string[];
            title?: string | null | undefined;
        }[];
    } | undefined;
    selection?: ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        options?: {
            value: string;
            key: string;
            isPreselected?: boolean | undefined;
        }[] | null | undefined;
    }) | undefined;
}>;
declare const ShapeComponentConfigSchema: z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>, z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, z.ZodObject<{
    acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
        contentType: z.ZodString;
        extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        contentType: string;
        extensionLabel?: string | null | undefined;
    }, {
        contentType: string;
        extensionLabel?: string | null | undefined;
    }>, "many">>>;
    maxFileSize: z.ZodObject<{
        size: z.ZodNumber;
        unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
    }, "strip", z.ZodTypeAny, {
        size: number;
        unit: "Bytes" | "GiB" | "KiB" | "MiB";
    }, {
        size: number;
        unit: "Bytes" | "GiB" | "KiB" | "MiB";
    }>;
}, "strip", z.ZodTypeAny, {
    maxFileSize: {
        size: number;
        unit: "Bytes" | "GiB" | "KiB" | "MiB";
    };
    acceptedContentTypes?: {
        contentType: string;
        extensionLabel?: string | null | undefined;
    }[] | null | undefined;
}, {
    maxFileSize: {
        size: number;
        unit: "Bytes" | "GiB" | "KiB" | "MiB";
    };
    acceptedContentTypes?: {
        contentType: string;
        extensionLabel?: string | null | undefined;
    }[] | null | undefined;
}>>]>, z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
}>, z.ZodObject<{
    acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
    quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
        folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
            folderId: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            folderId: string;
        }, {
            folderId: string;
        }>, "many">>>;
    }, "strip", z.ZodTypeAny, {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    }, {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    acceptedShapeIdentifiers?: string[] | null | undefined;
    quickSelect?: {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    } | null | undefined;
}, {
    acceptedShapeIdentifiers?: string[] | null | undefined;
    quickSelect?: {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    } | null | undefined;
}>>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
} & {
    acceptedShapeIdentifiers?: string[] | null | undefined;
    quickSelect?: {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    } | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
    minItems?: number | null | undefined;
    maxItems?: number | null | undefined;
    minSkus?: number | null | undefined;
    maxSkus?: number | null | undefined;
} & {
    acceptedShapeIdentifiers?: string[] | null | undefined;
    quickSelect?: {
        folders?: {
            folderId: string;
        }[] | null | undefined;
    } | null | undefined;
}>]>, z.ZodObject<{
    decimalPlaces: z.ZodOptional<z.ZodNumber>;
    units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    decimalPlaces?: number | undefined;
    units?: string[] | undefined;
}, {
    decimalPlaces?: number | undefined;
    units?: string[] | undefined;
}>]>, z.ZodObject<{
    sections: z.ZodArray<z.ZodObject<{
        title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        keys: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        keys: string[];
        title?: string | null | undefined;
    }, {
        keys: string[];
        title?: string | null | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    sections: {
        keys: string[];
        title?: string | null | undefined;
    }[];
}, {
    sections: {
        keys: string[];
        title?: string | null | undefined;
    }[];
}>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}, {
    min?: number | null | undefined;
    max?: number | null | undefined;
}>, z.ZodObject<{
    options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
        key: z.ZodString;
        value: z.ZodString;
        isPreselected: z.ZodDefault<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        key: string;
        isPreselected: boolean;
    }, {
        value: string;
        key: string;
        isPreselected?: boolean | undefined;
    }>, "many">>>;
}, "strip", z.ZodTypeAny, {
    options?: {
        value: string;
        key: string;
        isPreselected: boolean;
    }[] | null | undefined;
}, {
    options?: {
        value: string;
        key: string;
        isPreselected?: boolean | undefined;
    }[] | null | undefined;
}>>]>;
declare const ShapeComponentInputSchema: z.ZodEffects<z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
    description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    config: z.ZodNullable<z.ZodOptional<z.ZodObject<{
        componentChoice: z.ZodOptional<z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>>;
        contentChunk: z.ZodOptional<z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>>;
        files: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
            min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, z.ZodObject<{
            acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                contentType: z.ZodString;
                extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }, {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }>, "many">>>;
            maxFileSize: z.ZodObject<{
                size: z.ZodNumber;
                unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
            }, "strip", z.ZodTypeAny, {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            }, {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            }>;
        }, "strip", z.ZodTypeAny, {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }, {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }>>>;
        itemRelations: z.ZodOptional<z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
            min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }>, z.ZodObject<{
            acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
            quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    folderId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    folderId: string;
                }, {
                    folderId: string;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            }, {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }, {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }>>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }>>;
        numeric: z.ZodOptional<z.ZodObject<{
            decimalPlaces: z.ZodOptional<z.ZodNumber>;
            units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        }, {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        }>>;
        propertiesTable: z.ZodOptional<z.ZodObject<{
            sections: z.ZodArray<z.ZodObject<{
                title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                keys: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                keys: string[];
                title?: string | null | undefined;
            }, {
                keys: string[];
                title?: string | null | undefined;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        }, {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        }>>;
        selection: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
            min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, z.ZodObject<{
            options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                key: z.ZodString;
                value: z.ZodString;
                isPreselected: z.ZodDefault<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                key: string;
                isPreselected: boolean;
            }, {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }, {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }>>>;
    }, "strip", z.ZodTypeAny, {
        componentChoice?: ComponentChoiceComponentConfig | undefined;
        contentChunk?: ContentChunkComponentConfig | undefined;
        files?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | undefined;
        itemRelations?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | undefined;
        numeric?: {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | undefined;
        propertiesTable?: {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | undefined;
        selection?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }) | undefined;
    }, {
        componentChoice?: ComponentChoiceComponentConfig | undefined;
        contentChunk?: ContentChunkComponentConfig | undefined;
        files?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | undefined;
        itemRelations?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | undefined;
        numeric?: {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | undefined;
        propertiesTable?: {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | undefined;
        selection?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }) | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
    id: string;
    name: string;
    description?: string | null | undefined;
    config?: {
        componentChoice?: ComponentChoiceComponentConfig | undefined;
        contentChunk?: ContentChunkComponentConfig | undefined;
        files?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | undefined;
        itemRelations?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | undefined;
        numeric?: {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | undefined;
        propertiesTable?: {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | undefined;
        selection?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }) | undefined;
    } | null | undefined;
}, {
    type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
    id: string;
    name: string;
    description?: string | null | undefined;
    config?: {
        componentChoice?: ComponentChoiceComponentConfig | undefined;
        contentChunk?: ContentChunkComponentConfig | undefined;
        files?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | undefined;
        itemRelations?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | undefined;
        numeric?: {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | undefined;
        propertiesTable?: {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | undefined;
        selection?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }) | undefined;
    } | null | undefined;
}>, {
    type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
    id: string;
    name: string;
    description?: string | null | undefined;
    config?: {
        componentChoice?: ComponentChoiceComponentConfig | undefined;
        contentChunk?: ContentChunkComponentConfig | undefined;
        files?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | undefined;
        itemRelations?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | undefined;
        numeric?: {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | undefined;
        propertiesTable?: {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | undefined;
        selection?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }) | undefined;
    } | null | undefined;
}, {
    type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
    id: string;
    name: string;
    description?: string | null | undefined;
    config?: {
        componentChoice?: ComponentChoiceComponentConfig | undefined;
        contentChunk?: ContentChunkComponentConfig | undefined;
        files?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | undefined;
        itemRelations?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | undefined;
        numeric?: {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | undefined;
        propertiesTable?: {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | undefined;
        selection?: ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }) | undefined;
    } | null | undefined;
}>;
declare const ShapeComponentSchema: z.ZodEffects<z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
    description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    config: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>, z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
        min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, z.ZodObject<{
        acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
            contentType: z.ZodString;
            extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }, {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }>, "many">>>;
        maxFileSize: z.ZodObject<{
            size: z.ZodNumber;
            unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
        }, "strip", z.ZodTypeAny, {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        }, {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        }>;
    }, "strip", z.ZodTypeAny, {
        maxFileSize: {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        };
        acceptedContentTypes?: {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }[] | null | undefined;
    }, {
        maxFileSize: {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        };
        acceptedContentTypes?: {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }[] | null | undefined;
    }>>]>, z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
        min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    }>, z.ZodObject<{
        acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
        quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
            folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                folderId: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                folderId: string;
            }, {
                folderId: string;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        }, {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        }>>>;
    }, "strip", z.ZodTypeAny, {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }, {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }>>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    } & {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    } & {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }>]>, z.ZodObject<{
        decimalPlaces: z.ZodOptional<z.ZodNumber>;
        units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        decimalPlaces?: number | undefined;
        units?: string[] | undefined;
    }, {
        decimalPlaces?: number | undefined;
        units?: string[] | undefined;
    }>]>, z.ZodObject<{
        sections: z.ZodArray<z.ZodObject<{
            title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            keys: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            keys: string[];
            title?: string | null | undefined;
        }, {
            keys: string[];
            title?: string | null | undefined;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        sections: {
            keys: string[];
            title?: string | null | undefined;
        }[];
    }, {
        sections: {
            keys: string[];
            title?: string | null | undefined;
        }[];
    }>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
        min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }, {
        min?: number | null | undefined;
        max?: number | null | undefined;
    }>, z.ZodObject<{
        options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
            key: z.ZodString;
            value: z.ZodString;
            isPreselected: z.ZodDefault<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            value: string;
            key: string;
            isPreselected: boolean;
        }, {
            value: string;
            key: string;
            isPreselected?: boolean | undefined;
        }>, "many">>>;
    }, "strip", z.ZodTypeAny, {
        options?: {
            value: string;
            key: string;
            isPreselected: boolean;
        }[] | null | undefined;
    }, {
        options?: {
            value: string;
            key: string;
            isPreselected?: boolean | undefined;
        }[] | null | undefined;
    }>>]>>>;
}, "strip", z.ZodTypeAny, {
    type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
    id: string;
    name: string;
    description?: string | null | undefined;
    config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        maxFileSize: {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        };
        acceptedContentTypes?: {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }[] | null | undefined;
    }) | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    } & {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }) | {
        decimalPlaces?: number | undefined;
        units?: string[] | undefined;
    } | {
        sections: {
            keys: string[];
            title?: string | null | undefined;
        }[];
    } | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        options?: {
            value: string;
            key: string;
            isPreselected: boolean;
        }[] | null | undefined;
    }) | null | undefined;
}, {
    type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
    id: string;
    name: string;
    description?: string | null | undefined;
    config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        maxFileSize: {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        };
        acceptedContentTypes?: {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }[] | null | undefined;
    }) | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    } & {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }) | {
        decimalPlaces?: number | undefined;
        units?: string[] | undefined;
    } | {
        sections: {
            keys: string[];
            title?: string | null | undefined;
        }[];
    } | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        options?: {
            value: string;
            key: string;
            isPreselected?: boolean | undefined;
        }[] | null | undefined;
    }) | null | undefined;
}>, {
    type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
    id: string;
    name: string;
    description?: string | null | undefined;
    config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        maxFileSize: {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        };
        acceptedContentTypes?: {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }[] | null | undefined;
    }) | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    } & {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }) | {
        decimalPlaces?: number | undefined;
        units?: string[] | undefined;
    } | {
        sections: {
            keys: string[];
            title?: string | null | undefined;
        }[];
    } | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        options?: {
            value: string;
            key: string;
            isPreselected: boolean;
        }[] | null | undefined;
    }) | null | undefined;
}, {
    type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
    id: string;
    name: string;
    description?: string | null | undefined;
    config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        maxFileSize: {
            size: number;
            unit: "Bytes" | "GiB" | "KiB" | "MiB";
        };
        acceptedContentTypes?: {
            contentType: string;
            extensionLabel?: string | null | undefined;
        }[] | null | undefined;
    }) | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
        minItems?: number | null | undefined;
        maxItems?: number | null | undefined;
        minSkus?: number | null | undefined;
        maxSkus?: number | null | undefined;
    } & {
        acceptedShapeIdentifiers?: string[] | null | undefined;
        quickSelect?: {
            folders?: {
                folderId: string;
            }[] | null | undefined;
        } | null | undefined;
    }) | {
        decimalPlaces?: number | undefined;
        units?: string[] | undefined;
    } | {
        sections: {
            keys: string[];
            title?: string | null | undefined;
        }[];
    } | ({
        min?: number | null | undefined;
        max?: number | null | undefined;
    } & {
        options?: {
            value: string;
            key: string;
            isPreselected?: boolean | undefined;
        }[] | null | undefined;
    }) | null | undefined;
}>;
type MinMaxComponentConfig = z.infer<typeof MinMaxComponentConfigSchema>;
type MinMaxItemRelationsComponentConfig = z.infer<typeof MinMaxItemRelationsComponentConfigSchema>;
type FileComponentConfig = z.infer<typeof FileComponentConfigSchema>;
type ItemRelationsComponentConfig = z.infer<typeof ItemRelationsComponentConfigSchema>;
type NumericComponentConfig = z.infer<typeof NumericComponentConfigSchema>;
type PropertiesTableComponentConfig = z.infer<typeof PropertiesTableComponentConfigSchema>;
type SelectionComponentConfig = z.infer<typeof SelectionComponentConfigInputSchema>;
type ShapeComponentConfigInput = z.infer<typeof ShapeComponentConfigInputSchema>;
type ShapeComponentInput = z.infer<typeof ShapeComponentInputSchema>;
type ShapeComponentConfig = z.infer<typeof ShapeComponentConfigSchema>;
type ShapeComponent = z.infer<typeof ShapeComponentSchema>;

declare const ShapeTypeEnum: z.ZodEnum<["product", "document", "folder"]>;
declare const ShapeComponentTypeEnum: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
type ShapeType = z.infer<typeof ShapeTypeEnum>;
type ShapeComponentType = z.infer<typeof ShapeComponentTypeEnum>;

declare const CreateShapeInputSchema: z.ZodEffects<z.ZodObject<{
    identifier: z.ZodOptional<z.ZodString>;
    name: z.ZodString;
    tenantId: z.ZodString;
    type: z.ZodEnum<["product", "document", "folder"]>;
    meta: z.ZodNullable<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>>;
    components: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
        description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        config: z.ZodNullable<z.ZodOptional<z.ZodObject<{
            componentChoice: z.ZodOptional<z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>>;
            contentChunk: z.ZodOptional<z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>>;
            files: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    contentType: z.ZodString;
                    extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }>, "many">>>;
                maxFileSize: z.ZodObject<{
                    size: z.ZodNumber;
                    unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
                }, "strip", z.ZodTypeAny, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }>;
            }, "strip", z.ZodTypeAny, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }>>>;
            itemRelations: z.ZodOptional<z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
                quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                    folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                        folderId: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        folderId: string;
                    }, {
                        folderId: string;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }>>>;
            }, "strip", z.ZodTypeAny, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>>;
            numeric: z.ZodOptional<z.ZodObject<{
                decimalPlaces: z.ZodOptional<z.ZodNumber>;
                units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }>>;
            propertiesTable: z.ZodOptional<z.ZodObject<{
                sections: z.ZodArray<z.ZodObject<{
                    title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                    keys: z.ZodArray<z.ZodString, "many">;
                }, "strip", z.ZodTypeAny, {
                    keys: string[];
                    title?: string | null | undefined;
                }, {
                    keys: string[];
                    title?: string | null | undefined;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }>>;
            selection: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    key: z.ZodString;
                    value: z.ZodString;
                    isPreselected: z.ZodDefault<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }, {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        }, {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        }>>>;
    }, "strip", z.ZodTypeAny, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }>, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }>, "many">>>;
    variantComponents: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
        description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        config: z.ZodNullable<z.ZodOptional<z.ZodObject<{
            componentChoice: z.ZodOptional<z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>>;
            contentChunk: z.ZodOptional<z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>>;
            files: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    contentType: z.ZodString;
                    extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }>, "many">>>;
                maxFileSize: z.ZodObject<{
                    size: z.ZodNumber;
                    unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
                }, "strip", z.ZodTypeAny, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }>;
            }, "strip", z.ZodTypeAny, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }>>>;
            itemRelations: z.ZodOptional<z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
                quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                    folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                        folderId: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        folderId: string;
                    }, {
                        folderId: string;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }>>>;
            }, "strip", z.ZodTypeAny, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>>;
            numeric: z.ZodOptional<z.ZodObject<{
                decimalPlaces: z.ZodOptional<z.ZodNumber>;
                units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }>>;
            propertiesTable: z.ZodOptional<z.ZodObject<{
                sections: z.ZodArray<z.ZodObject<{
                    title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                    keys: z.ZodArray<z.ZodString, "many">;
                }, "strip", z.ZodTypeAny, {
                    keys: string[];
                    title?: string | null | undefined;
                }, {
                    keys: string[];
                    title?: string | null | undefined;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }>>;
            selection: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    key: z.ZodString;
                    value: z.ZodString;
                    isPreselected: z.ZodDefault<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }, {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        }, {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        }>>>;
    }, "strip", z.ZodTypeAny, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }>, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }>, "many">>>;
}, "strip", z.ZodTypeAny, {
    type: "product" | "document" | "folder";
    name: string;
    tenantId: string;
    identifier?: string | undefined;
    meta?: Record<string, string> | null | undefined;
    components?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
    variantComponents?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
}, {
    type: "product" | "document" | "folder";
    name: string;
    tenantId: string;
    identifier?: string | undefined;
    meta?: Record<string, string> | null | undefined;
    components?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
    variantComponents?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
}>, {
    type: "product" | "document" | "folder";
    name: string;
    tenantId: string;
    identifier?: string | undefined;
    meta?: Record<string, string> | null | undefined;
    components?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
    variantComponents?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
}, {
    type: "product" | "document" | "folder";
    name: string;
    tenantId: string;
    identifier?: string | undefined;
    meta?: Record<string, string> | null | undefined;
    components?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
    variantComponents?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
}>;
declare const UpdateShapeInputSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    meta: z.ZodNullable<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>>;
    components: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
        description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        config: z.ZodNullable<z.ZodOptional<z.ZodObject<{
            componentChoice: z.ZodOptional<z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>>;
            contentChunk: z.ZodOptional<z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>>;
            files: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    contentType: z.ZodString;
                    extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }>, "many">>>;
                maxFileSize: z.ZodObject<{
                    size: z.ZodNumber;
                    unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
                }, "strip", z.ZodTypeAny, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }>;
            }, "strip", z.ZodTypeAny, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }>>>;
            itemRelations: z.ZodOptional<z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
                quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                    folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                        folderId: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        folderId: string;
                    }, {
                        folderId: string;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }>>>;
            }, "strip", z.ZodTypeAny, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>>;
            numeric: z.ZodOptional<z.ZodObject<{
                decimalPlaces: z.ZodOptional<z.ZodNumber>;
                units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }>>;
            propertiesTable: z.ZodOptional<z.ZodObject<{
                sections: z.ZodArray<z.ZodObject<{
                    title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                    keys: z.ZodArray<z.ZodString, "many">;
                }, "strip", z.ZodTypeAny, {
                    keys: string[];
                    title?: string | null | undefined;
                }, {
                    keys: string[];
                    title?: string | null | undefined;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }>>;
            selection: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    key: z.ZodString;
                    value: z.ZodString;
                    isPreselected: z.ZodDefault<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }, {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        }, {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        }>>>;
    }, "strip", z.ZodTypeAny, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }>, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }>, "many">>>;
    variantComponents: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
        description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        config: z.ZodNullable<z.ZodOptional<z.ZodObject<{
            componentChoice: z.ZodOptional<z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>>;
            contentChunk: z.ZodOptional<z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>>;
            files: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    contentType: z.ZodString;
                    extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }>, "many">>>;
                maxFileSize: z.ZodObject<{
                    size: z.ZodNumber;
                    unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
                }, "strip", z.ZodTypeAny, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }>;
            }, "strip", z.ZodTypeAny, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }>>>;
            itemRelations: z.ZodOptional<z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
                quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                    folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                        folderId: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        folderId: string;
                    }, {
                        folderId: string;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }>>>;
            }, "strip", z.ZodTypeAny, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>>;
            numeric: z.ZodOptional<z.ZodObject<{
                decimalPlaces: z.ZodOptional<z.ZodNumber>;
                units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }>>;
            propertiesTable: z.ZodOptional<z.ZodObject<{
                sections: z.ZodArray<z.ZodObject<{
                    title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                    keys: z.ZodArray<z.ZodString, "many">;
                }, "strip", z.ZodTypeAny, {
                    keys: string[];
                    title?: string | null | undefined;
                }, {
                    keys: string[];
                    title?: string | null | undefined;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }>>;
            selection: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    key: z.ZodString;
                    value: z.ZodString;
                    isPreselected: z.ZodDefault<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }, {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        }, {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        }>>>;
    }, "strip", z.ZodTypeAny, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }>, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }>, "many">>>;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    meta?: Record<string, string> | null | undefined;
    components?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
    variantComponents?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
}, {
    name?: string | undefined;
    meta?: Record<string, string> | null | undefined;
    components?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
    variantComponents?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: {
            componentChoice?: ComponentChoiceComponentConfig | undefined;
            contentChunk?: ContentChunkComponentConfig | undefined;
            files?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | undefined;
            itemRelations?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | undefined;
            numeric?: {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | undefined;
            propertiesTable?: {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | undefined;
            selection?: ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | undefined;
        } | null | undefined;
    }[] | null | undefined;
}>;
declare const basicShapeSchema: z.ZodObject<{
    identifier: z.ZodString;
    name: z.ZodString;
    type: z.ZodEnum<["product", "document", "folder"]>;
}, "strip", z.ZodTypeAny, {
    type: "product" | "document" | "folder";
    name: string;
    identifier: string;
}, {
    type: "product" | "document" | "folder";
    name: string;
    identifier: string;
}>;
declare const ShapeSchema: z.ZodObject<{
    type: z.ZodEnum<["product", "document", "folder"]>;
    name: z.ZodString;
    identifier: z.ZodString;
    components: z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
        description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        config: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>, z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
            min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, z.ZodObject<{
            acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                contentType: z.ZodString;
                extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }, {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }>, "many">>>;
            maxFileSize: z.ZodObject<{
                size: z.ZodNumber;
                unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
            }, "strip", z.ZodTypeAny, {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            }, {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            }>;
        }, "strip", z.ZodTypeAny, {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }, {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }>>]>, z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
            min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }>, z.ZodObject<{
            acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
            quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    folderId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    folderId: string;
                }, {
                    folderId: string;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            }, {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }, {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }>>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }>]>, z.ZodObject<{
            decimalPlaces: z.ZodOptional<z.ZodNumber>;
            units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        }, {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        }>]>, z.ZodObject<{
            sections: z.ZodArray<z.ZodObject<{
                title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                keys: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                keys: string[];
                title?: string | null | undefined;
            }, {
                keys: string[];
                title?: string | null | undefined;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        }, {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        }>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
            min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, z.ZodObject<{
            options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                key: z.ZodString;
                value: z.ZodString;
                isPreselected: z.ZodDefault<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                key: string;
                isPreselected: boolean;
            }, {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }, {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }>>]>>>;
    }, "strip", z.ZodTypeAny, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }) | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }) | null | undefined;
    }>, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }) | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }) | null | undefined;
    }>, "many">>;
    variantComponents: z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
        description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        config: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>, z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
            min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, z.ZodObject<{
            acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                contentType: z.ZodString;
                extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            }, "strip", z.ZodTypeAny, {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }, {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }>, "many">>>;
            maxFileSize: z.ZodObject<{
                size: z.ZodNumber;
                unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
            }, "strip", z.ZodTypeAny, {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            }, {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            }>;
        }, "strip", z.ZodTypeAny, {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }, {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }>>]>, z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
            min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        }>, z.ZodObject<{
            acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
            quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    folderId: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    folderId: string;
                }, {
                    folderId: string;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            }, {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }, {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }>>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }>]>, z.ZodObject<{
            decimalPlaces: z.ZodOptional<z.ZodNumber>;
            units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        }, {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        }>]>, z.ZodObject<{
            sections: z.ZodArray<z.ZodObject<{
                title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                keys: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                keys: string[];
                title?: string | null | undefined;
            }, {
                keys: string[];
                title?: string | null | undefined;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        }, {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        }>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
            min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }, {
            min?: number | null | undefined;
            max?: number | null | undefined;
        }>, z.ZodObject<{
            options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                key: z.ZodString;
                value: z.ZodString;
                isPreselected: z.ZodDefault<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                value: string;
                key: string;
                isPreselected: boolean;
            }, {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }>, "many">>>;
        }, "strip", z.ZodTypeAny, {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }, {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }>>]>>>;
    }, "strip", z.ZodTypeAny, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }) | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }) | null | undefined;
    }>, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }) | null | undefined;
    }, {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }) | null | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    type: "product" | "document" | "folder";
    name: string;
    identifier: string;
    components?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }) | null | undefined;
    }[] | undefined;
    variantComponents?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected: boolean;
            }[] | null | undefined;
        }) | null | undefined;
    }[] | undefined;
}, {
    type: "product" | "document" | "folder";
    name: string;
    identifier: string;
    components?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }) | null | undefined;
    }[] | undefined;
    variantComponents?: {
        type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
        id: string;
        name: string;
        description?: string | null | undefined;
        config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            maxFileSize: {
                size: number;
                unit: "Bytes" | "GiB" | "KiB" | "MiB";
            };
            acceptedContentTypes?: {
                contentType: string;
                extensionLabel?: string | null | undefined;
            }[] | null | undefined;
        }) | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
            minItems?: number | null | undefined;
            maxItems?: number | null | undefined;
            minSkus?: number | null | undefined;
            maxSkus?: number | null | undefined;
        } & {
            acceptedShapeIdentifiers?: string[] | null | undefined;
            quickSelect?: {
                folders?: {
                    folderId: string;
                }[] | null | undefined;
            } | null | undefined;
        }) | {
            decimalPlaces?: number | undefined;
            units?: string[] | undefined;
        } | {
            sections: {
                keys: string[];
                title?: string | null | undefined;
            }[];
        } | ({
            min?: number | null | undefined;
            max?: number | null | undefined;
        } & {
            options?: {
                value: string;
                key: string;
                isPreselected?: boolean | undefined;
            }[] | null | undefined;
        }) | null | undefined;
    }[] | undefined;
}>;
type CreateShapeInput = z.infer<typeof CreateShapeInputSchema>;
type UpdateShapeInput = z.infer<typeof UpdateShapeInputSchema>;
type Shape = z.infer<typeof ShapeSchema>;

declare const IdSchema: z.ZodString;
declare const KeyValuePairSchema: z.ZodRecord<z.ZodString, z.ZodString>;
declare const DateTimeSchema: z.ZodEffects<z.ZodString, string, string>;
declare const KeyValuePairInputSchema: z.ZodObject<{
    key: z.ZodString;
    value: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    key: string;
    value?: string | undefined;
}, {
    key: string;
    value?: string | undefined;
}>;
type Id = z.infer<typeof IdSchema>;
type KeyValuePair = z.infer<typeof KeyValuePairSchema>;
type KeyValuePairInput = z.infer<typeof KeyValuePairInputSchema>;

declare const MAX_CHILD_COUNT = 100;
type CreateChildTopicInput = {
    name: string;
    children?: CreateChildTopicInput[];
    pathIdentifier?: string;
};
declare const CreateChildTopicInputSchema: z.ZodType<CreateChildTopicInput>;
declare const BulkCreateTopicInputSchema: z.ZodObject<{
    name: z.ZodString;
    children: z.ZodOptional<z.ZodEffects<z.ZodArray<z.ZodType<CreateChildTopicInput, z.ZodTypeDef, CreateChildTopicInput>, "many">, CreateChildTopicInput[], CreateChildTopicInput[]>>;
    parentId: z.ZodOptional<z.ZodString>;
    pathIdentifier: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name: string;
    children?: CreateChildTopicInput[] | undefined;
    parentId?: string | undefined;
    pathIdentifier?: string | undefined;
}, {
    name: string;
    children?: CreateChildTopicInput[] | undefined;
    parentId?: string | undefined;
    pathIdentifier?: string | undefined;
}>;
declare const CreateTopicInputSchema: z.ZodObject<{
    name: z.ZodString;
    children: z.ZodOptional<z.ZodEffects<z.ZodArray<z.ZodType<CreateChildTopicInput, z.ZodTypeDef, CreateChildTopicInput>, "many">, CreateChildTopicInput[], CreateChildTopicInput[]>>;
    parentId: z.ZodOptional<z.ZodString>;
    pathIdentifier: z.ZodOptional<z.ZodString>;
    tenantId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    name: string;
    tenantId: string;
    children?: CreateChildTopicInput[] | undefined;
    parentId?: string | undefined;
    pathIdentifier?: string | undefined;
}, {
    name: string;
    tenantId: string;
    children?: CreateChildTopicInput[] | undefined;
    parentId?: string | undefined;
    pathIdentifier?: string | undefined;
}>;
declare const UpdateTopicInputSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    parentId: z.ZodOptional<z.ZodString>;
    pathIdentifier: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    parentId?: string | undefined;
    pathIdentifier?: string | undefined;
}, {
    name?: string | undefined;
    parentId?: string | undefined;
    pathIdentifier?: string | undefined;
}>;
type Topic = {
    language?: string;
    name: string;
    id?: string;
    parentId?: string;
    pathIdentifier?: string;
    children?: Topic[];
};
declare const TopicSchema: z.ZodType<Topic>;
type BulkCreateTopicInput = z.infer<typeof BulkCreateTopicInputSchema>;
type CreateTopicInput = z.infer<typeof CreateTopicInputSchema>;
type UpdateTopicInput = z.infer<typeof UpdateTopicInputSchema>;

declare const ItemTypeEnum: z.ZodEnum<["product", "document", "folder"]>;
type ItemType = z.infer<typeof ItemTypeEnum>;

type Item = {
    id: Id;
    tenantId: Id;
    language: string;
    createdAt?: string;
    updatedAt?: string;
    type: ItemType;
    name?: string;
    externalReference?: string;
    shape?: z.infer<typeof basicShapeSchema>;
    components?: any[];
    topics?: Topic[];
    relatingItems?: Item[];
    tree?: {
        path?: string;
    };
};
declare const ProductVariantAttributeSchema: z.ZodObject<{
    attribute: z.ZodString;
    value: z.ZodString;
}, "strip", z.ZodTypeAny, {
    value: string;
    attribute: string;
}, {
    value: string;
    attribute: string;
}>;
declare const ProductPriceVariantSchema: z.ZodObject<{
    identifier: z.ZodString;
    currency: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    price: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    identifier: string;
    currency?: string | undefined;
    name?: string | undefined;
    price?: number | undefined;
}, {
    identifier: string;
    currency?: string | undefined;
    name?: string | undefined;
    price?: number | undefined;
}>;
declare const ProductVariantSchema: z.ZodObject<{
    isDefault: z.ZodDefault<z.ZodBoolean>;
    sku: z.ZodString;
    name: z.ZodString;
    externalReference: z.ZodOptional<z.ZodString>;
    attributes: z.ZodOptional<z.ZodArray<z.ZodObject<{
        attribute: z.ZodString;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        attribute: string;
    }, {
        value: string;
        attribute: string;
    }>, "many">>;
    price: z.ZodOptional<z.ZodNumber>;
    priceVariants: z.ZodOptional<z.ZodArray<z.ZodObject<{
        identifier: z.ZodString;
        currency: z.ZodOptional<z.ZodString>;
        name: z.ZodOptional<z.ZodString>;
        price: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        identifier: string;
        currency?: string | undefined;
        name?: string | undefined;
        price?: number | undefined;
    }, {
        identifier: string;
        currency?: string | undefined;
        name?: string | undefined;
        price?: number | undefined;
    }>, "many">>;
    stock: z.ZodOptional<z.ZodNumber>;
    components: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
}, "strip", z.ZodTypeAny, {
    name: string;
    isDefault: boolean;
    sku: string;
    externalReference?: string | undefined;
    attributes?: {
        value: string;
        attribute: string;
    }[] | undefined;
    price?: number | undefined;
    priceVariants?: {
        identifier: string;
        currency?: string | undefined;
        name?: string | undefined;
        price?: number | undefined;
    }[] | undefined;
    stock?: number | undefined;
    components?: any[] | undefined;
}, {
    name: string;
    sku: string;
    isDefault?: boolean | undefined;
    externalReference?: string | undefined;
    attributes?: {
        value: string;
        attribute: string;
    }[] | undefined;
    price?: number | undefined;
    priceVariants?: {
        identifier: string;
        currency?: string | undefined;
        name?: string | undefined;
        price?: number | undefined;
    }[] | undefined;
    stock?: number | undefined;
    components?: any[] | undefined;
}>;
declare const ItemSchema: z.ZodType<Item>;
declare const ProductSchema: z.ZodIntersection<z.ZodType<Item, z.ZodTypeDef, Item>, z.ZodObject<{
    variants: z.ZodOptional<z.ZodArray<z.ZodObject<{
        isDefault: z.ZodDefault<z.ZodBoolean>;
        sku: z.ZodString;
        name: z.ZodString;
        externalReference: z.ZodOptional<z.ZodString>;
        attributes: z.ZodOptional<z.ZodArray<z.ZodObject<{
            attribute: z.ZodString;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            attribute: string;
        }, {
            value: string;
            attribute: string;
        }>, "many">>;
        price: z.ZodOptional<z.ZodNumber>;
        priceVariants: z.ZodOptional<z.ZodArray<z.ZodObject<{
            identifier: z.ZodString;
            currency: z.ZodOptional<z.ZodString>;
            name: z.ZodOptional<z.ZodString>;
            price: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            identifier: string;
            currency?: string | undefined;
            name?: string | undefined;
            price?: number | undefined;
        }, {
            identifier: string;
            currency?: string | undefined;
            name?: string | undefined;
            price?: number | undefined;
        }>, "many">>;
        stock: z.ZodOptional<z.ZodNumber>;
        components: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        isDefault: boolean;
        sku: string;
        externalReference?: string | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            currency?: string | undefined;
            name?: string | undefined;
            price?: number | undefined;
        }[] | undefined;
        stock?: number | undefined;
        components?: any[] | undefined;
    }, {
        name: string;
        sku: string;
        isDefault?: boolean | undefined;
        externalReference?: string | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            currency?: string | undefined;
            name?: string | undefined;
            price?: number | undefined;
        }[] | undefined;
        stock?: number | undefined;
        components?: any[] | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    variants?: {
        name: string;
        isDefault: boolean;
        sku: string;
        externalReference?: string | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            currency?: string | undefined;
            name?: string | undefined;
            price?: number | undefined;
        }[] | undefined;
        stock?: number | undefined;
        components?: any[] | undefined;
    }[] | undefined;
}, {
    variants?: {
        name: string;
        sku: string;
        isDefault?: boolean | undefined;
        externalReference?: string | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            currency?: string | undefined;
            name?: string | undefined;
            price?: number | undefined;
        }[] | undefined;
        stock?: number | undefined;
        components?: any[] | undefined;
    }[] | undefined;
}>>;
declare const ProductVariantAttributeInputSchema: z.ZodObject<{
    attribute: z.ZodString;
    value: z.ZodString;
}, "strip", z.ZodTypeAny, {
    value: string;
    attribute: string;
}, {
    value: string;
    attribute: string;
}>;
declare const PriceVariantReferenceInputSchema: z.ZodObject<{
    identifier: z.ZodString;
    price: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    identifier: string;
    price: number;
}, {
    identifier: string;
    price: number;
}>;
declare const CreateProductVariantInputSchema: z.ZodObject<{
    isDefault: z.ZodBoolean;
    sku: z.ZodString;
    name: z.ZodOptional<z.ZodString>;
    price: z.ZodOptional<z.ZodNumber>;
    priceVariants: z.ZodOptional<z.ZodArray<z.ZodObject<{
        identifier: z.ZodString;
        price: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        identifier: string;
        price: number;
    }, {
        identifier: string;
        price: number;
    }>, "many">>;
    stock: z.ZodOptional<z.ZodNumber>;
    attributes: z.ZodOptional<z.ZodArray<z.ZodObject<{
        attribute: z.ZodString;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        attribute: string;
    }, {
        value: string;
        attribute: string;
    }>, "many">>;
    components: z.ZodOptional<z.ZodArray<z.ZodType<ComponentInput, z.ZodTypeDef, ComponentInput>, "many">>;
    externalReference: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    isDefault: boolean;
    sku: string;
    name?: string | undefined;
    price?: number | undefined;
    priceVariants?: {
        identifier: string;
        price: number;
    }[] | undefined;
    stock?: number | undefined;
    attributes?: {
        value: string;
        attribute: string;
    }[] | undefined;
    components?: ComponentInput[] | undefined;
    externalReference?: string | undefined;
}, {
    isDefault: boolean;
    sku: string;
    name?: string | undefined;
    price?: number | undefined;
    priceVariants?: {
        identifier: string;
        price: number;
    }[] | undefined;
    stock?: number | undefined;
    attributes?: {
        value: string;
        attribute: string;
    }[] | undefined;
    components?: ComponentInput[] | undefined;
    externalReference?: string | undefined;
}>;
declare const UpdateProductVariantInputSchema: z.ZodObject<{
    isDefault: z.ZodOptional<z.ZodBoolean>;
    sku: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    price: z.ZodOptional<z.ZodNumber>;
    priceVariants: z.ZodOptional<z.ZodArray<z.ZodObject<{
        identifier: z.ZodString;
        price: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        identifier: string;
        price: number;
    }, {
        identifier: string;
        price: number;
    }>, "many">>;
    stock: z.ZodOptional<z.ZodNumber>;
    attributes: z.ZodOptional<z.ZodArray<z.ZodObject<{
        attribute: z.ZodString;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        attribute: string;
    }, {
        value: string;
        attribute: string;
    }>, "many">>;
    components: z.ZodOptional<z.ZodArray<z.ZodType<ComponentInput, z.ZodTypeDef, ComponentInput>, "many">>;
    externalReference: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    isDefault?: boolean | undefined;
    sku?: string | undefined;
    name?: string | undefined;
    price?: number | undefined;
    priceVariants?: {
        identifier: string;
        price: number;
    }[] | undefined;
    stock?: number | undefined;
    attributes?: {
        value: string;
        attribute: string;
    }[] | undefined;
    components?: ComponentInput[] | undefined;
    externalReference?: string | undefined;
}, {
    isDefault?: boolean | undefined;
    sku?: string | undefined;
    name?: string | undefined;
    price?: number | undefined;
    priceVariants?: {
        identifier: string;
        price: number;
    }[] | undefined;
    stock?: number | undefined;
    attributes?: {
        value: string;
        attribute: string;
    }[] | undefined;
    components?: ComponentInput[] | undefined;
    externalReference?: string | undefined;
}>;
declare const CreateDocumentInputSchema: z.ZodObject<{
    tenantId: z.ZodString;
    name: z.ZodString;
    shapeIdentifier: z.ZodString;
    createdAt: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    externalReference: z.ZodOptional<z.ZodString>;
    components: z.ZodOptional<z.ZodArray<z.ZodType<ComponentInput, z.ZodTypeDef, ComponentInput>, "many">>;
    topicIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    tree: z.ZodObject<{
        parentId: z.ZodString;
        position: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        parentId: string;
        position?: number | undefined;
    }, {
        parentId: string;
        position?: number | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    name: string;
    tenantId: string;
    tree: {
        parentId: string;
        position?: number | undefined;
    };
    shapeIdentifier: string;
    createdAt?: string | undefined;
    externalReference?: string | undefined;
    components?: ComponentInput[] | undefined;
    topicIds?: string[] | undefined;
}, {
    name: string;
    tenantId: string;
    tree: {
        parentId: string;
        position?: number | undefined;
    };
    shapeIdentifier: string;
    createdAt?: string | undefined;
    externalReference?: string | undefined;
    components?: ComponentInput[] | undefined;
    topicIds?: string[] | undefined;
}>;
declare const CreateFolderInputSchema: z.ZodObject<{
    tenantId: z.ZodString;
    name: z.ZodString;
    shapeIdentifier: z.ZodString;
    createdAt: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    externalReference: z.ZodOptional<z.ZodString>;
    components: z.ZodOptional<z.ZodArray<z.ZodType<ComponentInput, z.ZodTypeDef, ComponentInput>, "many">>;
    topicIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    tree: z.ZodObject<{
        parentId: z.ZodString;
        position: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        parentId: string;
        position?: number | undefined;
    }, {
        parentId: string;
        position?: number | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    name: string;
    tenantId: string;
    tree: {
        parentId: string;
        position?: number | undefined;
    };
    shapeIdentifier: string;
    createdAt?: string | undefined;
    externalReference?: string | undefined;
    components?: ComponentInput[] | undefined;
    topicIds?: string[] | undefined;
}, {
    name: string;
    tenantId: string;
    tree: {
        parentId: string;
        position?: number | undefined;
    };
    shapeIdentifier: string;
    createdAt?: string | undefined;
    externalReference?: string | undefined;
    components?: ComponentInput[] | undefined;
    topicIds?: string[] | undefined;
}>;
declare const CreateProductInputSchema: z.ZodObject<{
    name: z.ZodString;
    components: z.ZodOptional<z.ZodArray<z.ZodType<ComponentInput, z.ZodTypeDef, ComponentInput>, "many">>;
    tenantId: z.ZodString;
    externalReference: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    tree: z.ZodObject<{
        parentId: z.ZodString;
        position: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        parentId: string;
        position?: number | undefined;
    }, {
        parentId: string;
        position?: number | undefined;
    }>;
    shapeIdentifier: z.ZodString;
    topicIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    variants: z.ZodArray<z.ZodObject<{
        isDefault: z.ZodBoolean;
        sku: z.ZodString;
        name: z.ZodOptional<z.ZodString>;
        price: z.ZodOptional<z.ZodNumber>;
        priceVariants: z.ZodOptional<z.ZodArray<z.ZodObject<{
            identifier: z.ZodString;
            price: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            identifier: string;
            price: number;
        }, {
            identifier: string;
            price: number;
        }>, "many">>;
        stock: z.ZodOptional<z.ZodNumber>;
        attributes: z.ZodOptional<z.ZodArray<z.ZodObject<{
            attribute: z.ZodString;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            attribute: string;
        }, {
            value: string;
            attribute: string;
        }>, "many">>;
        components: z.ZodOptional<z.ZodArray<z.ZodType<ComponentInput, z.ZodTypeDef, ComponentInput>, "many">>;
        externalReference: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        isDefault: boolean;
        sku: string;
        name?: string | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            price: number;
        }[] | undefined;
        stock?: number | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        components?: ComponentInput[] | undefined;
        externalReference?: string | undefined;
    }, {
        isDefault: boolean;
        sku: string;
        name?: string | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            price: number;
        }[] | undefined;
        stock?: number | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        components?: ComponentInput[] | undefined;
        externalReference?: string | undefined;
    }>, "many">;
    vatTypeId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    name: string;
    tenantId: string;
    tree: {
        parentId: string;
        position?: number | undefined;
    };
    variants: {
        isDefault: boolean;
        sku: string;
        name?: string | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            price: number;
        }[] | undefined;
        stock?: number | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        components?: ComponentInput[] | undefined;
        externalReference?: string | undefined;
    }[];
    shapeIdentifier: string;
    vatTypeId: string;
    components?: ComponentInput[] | undefined;
    externalReference?: string | undefined;
    createdAt?: string | undefined;
    topicIds?: string[] | undefined;
}, {
    name: string;
    tenantId: string;
    tree: {
        parentId: string;
        position?: number | undefined;
    };
    variants: {
        isDefault: boolean;
        sku: string;
        name?: string | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            price: number;
        }[] | undefined;
        stock?: number | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        components?: ComponentInput[] | undefined;
        externalReference?: string | undefined;
    }[];
    shapeIdentifier: string;
    vatTypeId: string;
    components?: ComponentInput[] | undefined;
    externalReference?: string | undefined;
    createdAt?: string | undefined;
    topicIds?: string[] | undefined;
}>;
declare const UpdateDocumentInputSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    externalReference: z.ZodOptional<z.ZodString>;
    components: z.ZodOptional<z.ZodArray<z.ZodType<ComponentInput, z.ZodTypeDef, ComponentInput>, "many">>;
    topicIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    createdAt?: string | undefined;
    externalReference?: string | undefined;
    components?: ComponentInput[] | undefined;
    topicIds?: string[] | undefined;
}, {
    name?: string | undefined;
    createdAt?: string | undefined;
    externalReference?: string | undefined;
    components?: ComponentInput[] | undefined;
    topicIds?: string[] | undefined;
}>;
declare const UpdateFolderInputSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    externalReference: z.ZodOptional<z.ZodString>;
    components: z.ZodOptional<z.ZodArray<z.ZodType<ComponentInput, z.ZodTypeDef, ComponentInput>, "many">>;
    topicIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    createdAt?: string | undefined;
    externalReference?: string | undefined;
    components?: ComponentInput[] | undefined;
    topicIds?: string[] | undefined;
}, {
    name?: string | undefined;
    createdAt?: string | undefined;
    externalReference?: string | undefined;
    components?: ComponentInput[] | undefined;
    topicIds?: string[] | undefined;
}>;
declare const UpdateProductInputSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    components: z.ZodOptional<z.ZodArray<z.ZodType<ComponentInput, z.ZodTypeDef, ComponentInput>, "many">>;
    externalReference: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    topicIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    variants: z.ZodOptional<z.ZodArray<z.ZodObject<{
        isDefault: z.ZodOptional<z.ZodBoolean>;
        sku: z.ZodOptional<z.ZodString>;
        name: z.ZodOptional<z.ZodString>;
        price: z.ZodOptional<z.ZodNumber>;
        priceVariants: z.ZodOptional<z.ZodArray<z.ZodObject<{
            identifier: z.ZodString;
            price: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            identifier: string;
            price: number;
        }, {
            identifier: string;
            price: number;
        }>, "many">>;
        stock: z.ZodOptional<z.ZodNumber>;
        attributes: z.ZodOptional<z.ZodArray<z.ZodObject<{
            attribute: z.ZodString;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            attribute: string;
        }, {
            value: string;
            attribute: string;
        }>, "many">>;
        components: z.ZodOptional<z.ZodArray<z.ZodType<ComponentInput, z.ZodTypeDef, ComponentInput>, "many">>;
        externalReference: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        isDefault?: boolean | undefined;
        sku?: string | undefined;
        name?: string | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            price: number;
        }[] | undefined;
        stock?: number | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        components?: ComponentInput[] | undefined;
        externalReference?: string | undefined;
    }, {
        isDefault?: boolean | undefined;
        sku?: string | undefined;
        name?: string | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            price: number;
        }[] | undefined;
        stock?: number | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        components?: ComponentInput[] | undefined;
        externalReference?: string | undefined;
    }>, "many">>;
    vatTypeId: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    components?: ComponentInput[] | undefined;
    externalReference?: string | undefined;
    createdAt?: string | undefined;
    topicIds?: string[] | undefined;
    variants?: {
        isDefault?: boolean | undefined;
        sku?: string | undefined;
        name?: string | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            price: number;
        }[] | undefined;
        stock?: number | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        components?: ComponentInput[] | undefined;
        externalReference?: string | undefined;
    }[] | undefined;
    vatTypeId?: string | undefined;
}, {
    name?: string | undefined;
    components?: ComponentInput[] | undefined;
    externalReference?: string | undefined;
    createdAt?: string | undefined;
    topicIds?: string[] | undefined;
    variants?: {
        isDefault?: boolean | undefined;
        sku?: string | undefined;
        name?: string | undefined;
        price?: number | undefined;
        priceVariants?: {
            identifier: string;
            price: number;
        }[] | undefined;
        stock?: number | undefined;
        attributes?: {
            value: string;
            attribute: string;
        }[] | undefined;
        components?: ComponentInput[] | undefined;
        externalReference?: string | undefined;
    }[] | undefined;
    vatTypeId?: string | undefined;
}>;
type Product = z.infer<typeof ProductSchema>;
type ProductVariant = z.infer<typeof ProductVariantSchema>;
type ProductVariantAttribute = z.infer<typeof ProductVariantAttributeSchema>;
type ProductPriceVariant = z.infer<typeof ProductPriceVariantSchema>;
type ProductVariantAttributeInput = z.infer<typeof ProductVariantAttributeInputSchema>;
type CreateProductVariantInput = z.infer<typeof CreateProductVariantInputSchema>;
type UpdateProductVariantInput = z.infer<typeof UpdateProductVariantInputSchema>;
type CreateDocumentInput = z.infer<typeof CreateDocumentInputSchema>;
type CreateFolderInput = z.infer<typeof CreateFolderInputSchema>;
type CreateProductInput = z.infer<typeof CreateProductInputSchema>;
type UpdateDocumentInput = z.infer<typeof UpdateDocumentInputSchema>;
type UpdateFolderInput = z.infer<typeof UpdateFolderInputSchema>;
type UpdateProductInput = z.infer<typeof UpdateProductInputSchema>;

declare const TenantDefaultsInputSchema: z.ZodObject<{
    currency: z.ZodOptional<z.ZodString>;
    language: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    currency?: string | undefined;
    language?: string | undefined;
}, {
    currency?: string | undefined;
    language?: string | undefined;
}>;
declare const CreateTenantInputSchema: z.ZodObject<{
    identifier: z.ZodString;
    name: z.ZodString;
    defaults: z.ZodOptional<z.ZodObject<{
        currency: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        currency?: string | undefined;
        language?: string | undefined;
    }, {
        currency?: string | undefined;
        language?: string | undefined;
    }>>;
    shapes: z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
        identifier: z.ZodOptional<z.ZodString>;
        name: z.ZodString;
        tenantId: z.ZodString;
        type: z.ZodEnum<["product", "document", "folder"]>;
        meta: z.ZodNullable<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>>;
        components: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
            description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            config: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                componentChoice: z.ZodOptional<z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>>;
                contentChunk: z.ZodOptional<z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>>;
                files: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, "strip", z.ZodTypeAny, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, z.ZodObject<{
                    acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                        contentType: z.ZodString;
                        extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                    }, "strip", z.ZodTypeAny, {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }, {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }>, "many">>>;
                    maxFileSize: z.ZodObject<{
                        size: z.ZodNumber;
                        unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
                    }, "strip", z.ZodTypeAny, {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    }, {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }, {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }>>>;
                itemRelations: z.ZodOptional<z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, "strip", z.ZodTypeAny, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }>, z.ZodObject<{
                    acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
                    quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                        folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                            folderId: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            folderId: string;
                        }, {
                            folderId: string;
                        }>, "many">>>;
                    }, "strip", z.ZodTypeAny, {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    }, {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    }>>>;
                }, "strip", z.ZodTypeAny, {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }, {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }>>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }>>;
                numeric: z.ZodOptional<z.ZodObject<{
                    decimalPlaces: z.ZodOptional<z.ZodNumber>;
                    units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                }, {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                }>>;
                propertiesTable: z.ZodOptional<z.ZodObject<{
                    sections: z.ZodArray<z.ZodObject<{
                        title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                        keys: z.ZodArray<z.ZodString, "many">;
                    }, "strip", z.ZodTypeAny, {
                        keys: string[];
                        title?: string | null | undefined;
                    }, {
                        keys: string[];
                        title?: string | null | undefined;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                }, {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                }>>;
                selection: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, "strip", z.ZodTypeAny, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, z.ZodObject<{
                    options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                        key: z.ZodString;
                        value: z.ZodString;
                        isPreselected: z.ZodDefault<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }, {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }, {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }>>>;
            }, "strip", z.ZodTypeAny, {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            }, {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }>, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }>, "many">>>;
        variantComponents: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
            description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            config: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                componentChoice: z.ZodOptional<z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>>;
                contentChunk: z.ZodOptional<z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>>;
                files: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, "strip", z.ZodTypeAny, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, z.ZodObject<{
                    acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                        contentType: z.ZodString;
                        extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                    }, "strip", z.ZodTypeAny, {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }, {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }>, "many">>>;
                    maxFileSize: z.ZodObject<{
                        size: z.ZodNumber;
                        unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
                    }, "strip", z.ZodTypeAny, {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    }, {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }, {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }>>>;
                itemRelations: z.ZodOptional<z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, "strip", z.ZodTypeAny, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                }>, z.ZodObject<{
                    acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
                    quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                        folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                            folderId: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            folderId: string;
                        }, {
                            folderId: string;
                        }>, "many">>>;
                    }, "strip", z.ZodTypeAny, {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    }, {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    }>>>;
                }, "strip", z.ZodTypeAny, {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }, {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }>>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }>>;
                numeric: z.ZodOptional<z.ZodObject<{
                    decimalPlaces: z.ZodOptional<z.ZodNumber>;
                    units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                }, {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                }>>;
                propertiesTable: z.ZodOptional<z.ZodObject<{
                    sections: z.ZodArray<z.ZodObject<{
                        title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                        keys: z.ZodArray<z.ZodString, "many">;
                    }, "strip", z.ZodTypeAny, {
                        keys: string[];
                        title?: string | null | undefined;
                    }, {
                        keys: string[];
                        title?: string | null | undefined;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                }, {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                }>>;
                selection: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                    min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, "strip", z.ZodTypeAny, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }, {
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                }>, z.ZodObject<{
                    options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                        key: z.ZodString;
                        value: z.ZodString;
                        isPreselected: z.ZodDefault<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }, {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }, {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }>>>;
            }, "strip", z.ZodTypeAny, {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            }, {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            }>>>;
        }, "strip", z.ZodTypeAny, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }>, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }>, "many">>>;
    }, "strip", z.ZodTypeAny, {
        type: "product" | "document" | "folder";
        name: string;
        tenantId: string;
        identifier?: string | undefined;
        meta?: Record<string, string> | null | undefined;
        components?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
        variantComponents?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
    }, {
        type: "product" | "document" | "folder";
        name: string;
        tenantId: string;
        identifier?: string | undefined;
        meta?: Record<string, string> | null | undefined;
        components?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
        variantComponents?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
    }>, {
        type: "product" | "document" | "folder";
        name: string;
        tenantId: string;
        identifier?: string | undefined;
        meta?: Record<string, string> | null | undefined;
        components?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
        variantComponents?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
    }, {
        type: "product" | "document" | "folder";
        name: string;
        tenantId: string;
        identifier?: string | undefined;
        meta?: Record<string, string> | null | undefined;
        components?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
        variantComponents?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    name: string;
    identifier: string;
    defaults?: {
        currency?: string | undefined;
        language?: string | undefined;
    } | undefined;
    shapes?: {
        type: "product" | "document" | "folder";
        name: string;
        tenantId: string;
        identifier?: string | undefined;
        meta?: Record<string, string> | null | undefined;
        components?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
        variantComponents?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected: boolean;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
    }[] | undefined;
}, {
    name: string;
    identifier: string;
    defaults?: {
        currency?: string | undefined;
        language?: string | undefined;
    } | undefined;
    shapes?: {
        type: "product" | "document" | "folder";
        name: string;
        tenantId: string;
        identifier?: string | undefined;
        meta?: Record<string, string> | null | undefined;
        components?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
        variantComponents?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: {
                componentChoice?: ComponentChoiceComponentConfig | undefined;
                contentChunk?: ContentChunkComponentConfig | undefined;
                files?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    maxFileSize: {
                        size: number;
                        unit: "Bytes" | "GiB" | "KiB" | "MiB";
                    };
                    acceptedContentTypes?: {
                        contentType: string;
                        extensionLabel?: string | null | undefined;
                    }[] | null | undefined;
                }) | undefined;
                itemRelations?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                    minItems?: number | null | undefined;
                    maxItems?: number | null | undefined;
                    minSkus?: number | null | undefined;
                    maxSkus?: number | null | undefined;
                } & {
                    acceptedShapeIdentifiers?: string[] | null | undefined;
                    quickSelect?: {
                        folders?: {
                            folderId: string;
                        }[] | null | undefined;
                    } | null | undefined;
                }) | undefined;
                numeric?: {
                    decimalPlaces?: number | undefined;
                    units?: string[] | undefined;
                } | undefined;
                propertiesTable?: {
                    sections: {
                        keys: string[];
                        title?: string | null | undefined;
                    }[];
                } | undefined;
                selection?: ({
                    min?: number | null | undefined;
                    max?: number | null | undefined;
                } & {
                    options?: {
                        value: string;
                        key: string;
                        isPreselected?: boolean | undefined;
                    }[] | null | undefined;
                }) | undefined;
            } | null | undefined;
        }[] | null | undefined;
    }[] | undefined;
}>;
declare const TenantDefaultsSchema: z.ZodObject<{
    currency: z.ZodString;
    language: z.ZodString;
}, "strip", z.ZodTypeAny, {
    language: string;
    currency: string;
}, {
    language: string;
    currency: string;
}>;
declare const TenantSchema: z.ZodObject<{
    id: z.ZodString;
    identifier: z.ZodString;
    name: z.ZodString;
    defaults: z.ZodObject<{
        currency: z.ZodString;
        language: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        language: string;
        currency: string;
    }, {
        language: string;
        currency: string;
    }>;
    shapes: z.ZodOptional<z.ZodArray<z.ZodObject<{
        type: z.ZodEnum<["product", "document", "folder"]>;
        name: z.ZodString;
        identifier: z.ZodString;
        components: z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
            description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            config: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>, z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    contentType: z.ZodString;
                    extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }>, "many">>>;
                maxFileSize: z.ZodObject<{
                    size: z.ZodNumber;
                    unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
                }, "strip", z.ZodTypeAny, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }>;
            }, "strip", z.ZodTypeAny, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }>>]>, z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
                quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                    folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                        folderId: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        folderId: string;
                    }, {
                        folderId: string;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }>>>;
            }, "strip", z.ZodTypeAny, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>]>, z.ZodObject<{
                decimalPlaces: z.ZodOptional<z.ZodNumber>;
                units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }>]>, z.ZodObject<{
                sections: z.ZodArray<z.ZodObject<{
                    title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                    keys: z.ZodArray<z.ZodString, "many">;
                }, "strip", z.ZodTypeAny, {
                    keys: string[];
                    title?: string | null | undefined;
                }, {
                    keys: string[];
                    title?: string | null | undefined;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    key: z.ZodString;
                    value: z.ZodString;
                    isPreselected: z.ZodDefault<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }, {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }>>]>>>;
        }, "strip", z.ZodTypeAny, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | null | undefined;
        }, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | null | undefined;
        }>, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | null | undefined;
        }, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | null | undefined;
        }>, "many">>;
        variantComponents: z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            type: z.ZodEnum<["boolean", "componentChoice", "contentChunk", "datetime", "gridRelations", "images", "itemRelations", "location", "numeric", "paragraphCollection", "propertiesTable", "richText", "selection", "singleLine", "videos", "files"]>;
            description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
            config: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodType<ComponentChoiceComponentConfig, z.ZodTypeDef, ComponentChoiceComponentConfig>, z.ZodType<ContentChunkComponentConfig, z.ZodTypeDef, ContentChunkComponentConfig>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedContentTypes: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    contentType: z.ZodString;
                    extensionLabel: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                }, "strip", z.ZodTypeAny, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }, {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }>, "many">>>;
                maxFileSize: z.ZodObject<{
                    size: z.ZodNumber;
                    unit: z.ZodEnum<["Bytes", "GiB", "KiB", "MiB"]>;
                }, "strip", z.ZodTypeAny, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }, {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                }>;
            }, "strip", z.ZodTypeAny, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }, {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }>>]>, z.ZodEffects<z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxItems: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                minSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                maxSkus: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            }>, z.ZodObject<{
                acceptedShapeIdentifiers: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
                quickSelect: z.ZodNullable<z.ZodOptional<z.ZodObject<{
                    folders: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                        folderId: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        folderId: string;
                    }, {
                        folderId: string;
                    }>, "many">>>;
                }, "strip", z.ZodTypeAny, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }, {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                }>>>;
            }, "strip", z.ZodTypeAny, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }>]>, z.ZodObject<{
                decimalPlaces: z.ZodOptional<z.ZodNumber>;
                units: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }, {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            }>]>, z.ZodObject<{
                sections: z.ZodArray<z.ZodObject<{
                    title: z.ZodNullable<z.ZodOptional<z.ZodString>>;
                    keys: z.ZodArray<z.ZodString, "many">;
                }, "strip", z.ZodTypeAny, {
                    keys: string[];
                    title?: string | null | undefined;
                }, {
                    keys: string[];
                    title?: string | null | undefined;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }, {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            }>]>, z.ZodIntersection<z.ZodEffects<z.ZodEffects<z.ZodObject<{
                min: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                max: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }, {
                min?: number | null | undefined;
                max?: number | null | undefined;
            }>, z.ZodObject<{
                options: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
                    key: z.ZodString;
                    value: z.ZodString;
                    isPreselected: z.ZodDefault<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }, {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }>, "many">>>;
            }, "strip", z.ZodTypeAny, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }, {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }>>]>>>;
        }, "strip", z.ZodTypeAny, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | null | undefined;
        }, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | null | undefined;
        }>, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | null | undefined;
        }, {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | null | undefined;
        }>, "many">>;
    }, "strip", z.ZodTypeAny, {
        type: "product" | "document" | "folder";
        name: string;
        identifier: string;
        components?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | null | undefined;
        }[] | undefined;
        variantComponents?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | null | undefined;
        }[] | undefined;
    }, {
        type: "product" | "document" | "folder";
        name: string;
        identifier: string;
        components?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | null | undefined;
        }[] | undefined;
        variantComponents?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | null | undefined;
        }[] | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    id: string;
    name: string;
    identifier: string;
    defaults: {
        language: string;
        currency: string;
    };
    shapes?: {
        type: "product" | "document" | "folder";
        name: string;
        identifier: string;
        components?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | null | undefined;
        }[] | undefined;
        variantComponents?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected: boolean;
                }[] | null | undefined;
            }) | null | undefined;
        }[] | undefined;
    }[] | undefined;
}, {
    id: string;
    name: string;
    identifier: string;
    defaults: {
        language: string;
        currency: string;
    };
    shapes?: {
        type: "product" | "document" | "folder";
        name: string;
        identifier: string;
        components?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | null | undefined;
        }[] | undefined;
        variantComponents?: {
            type: "boolean" | "componentChoice" | "contentChunk" | "datetime" | "gridRelations" | "images" | "itemRelations" | "location" | "numeric" | "paragraphCollection" | "propertiesTable" | "richText" | "selection" | "singleLine" | "videos" | "files";
            id: string;
            name: string;
            description?: string | null | undefined;
            config?: ComponentChoiceComponentConfig | ContentChunkComponentConfig | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                maxFileSize: {
                    size: number;
                    unit: "Bytes" | "GiB" | "KiB" | "MiB";
                };
                acceptedContentTypes?: {
                    contentType: string;
                    extensionLabel?: string | null | undefined;
                }[] | null | undefined;
            }) | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
                minItems?: number | null | undefined;
                maxItems?: number | null | undefined;
                minSkus?: number | null | undefined;
                maxSkus?: number | null | undefined;
            } & {
                acceptedShapeIdentifiers?: string[] | null | undefined;
                quickSelect?: {
                    folders?: {
                        folderId: string;
                    }[] | null | undefined;
                } | null | undefined;
            }) | {
                decimalPlaces?: number | undefined;
                units?: string[] | undefined;
            } | {
                sections: {
                    keys: string[];
                    title?: string | null | undefined;
                }[];
            } | ({
                min?: number | null | undefined;
                max?: number | null | undefined;
            } & {
                options?: {
                    value: string;
                    key: string;
                    isPreselected?: boolean | undefined;
                }[] | null | undefined;
            }) | null | undefined;
        }[] | undefined;
    }[] | undefined;
}>;
type TenantDefaultsInput = z.infer<typeof TenantDefaultsInputSchema>;
type CreateTenantInput = z.infer<typeof CreateTenantInputSchema>;
type TenantDefaults = z.infer<typeof TenantDefaultsSchema>;
type Tenant = z.infer<typeof TenantSchema>;

export { BulkCreateTopicInput, BulkCreateTopicInputSchema, ComponentChoiceComponentConfig, ComponentChoiceComponentConfigInputSchema, ContentChunkComponentConfig, ContentChunkComponentConfigInputSchema, CreateChildTopicInput, CreateChildTopicInputSchema, CreateDocumentInput, CreateDocumentInputSchema, CreateFolderInput, CreateFolderInputSchema, CreateProductInput, CreateProductInputSchema, CreateProductVariantInput, CreateProductVariantInputSchema, CreateShapeInput, CreateShapeInputSchema, CreateTenantInput, CreateTenantInputSchema, CreateTopicInput, CreateTopicInputSchema, DateTimeSchema, FileComponentConfig, FileComponentConfigSchema, Id, IdSchema, Item, ItemRelationsComponentConfig, ItemRelationsComponentConfigSchema, ItemSchema, KeyValuePair, KeyValuePairInput, KeyValuePairInputSchema, KeyValuePairSchema, MAX_CHILD_COUNT, MinMaxComponentConfig, MinMaxComponentConfigSchema, MinMaxItemRelationsComponentConfig, MinMaxItemRelationsComponentConfigSchema, NumericComponentConfig, NumericComponentConfigSchema, PriceVariantReferenceInputSchema, Product, ProductPriceVariant, ProductPriceVariantSchema, ProductSchema, ProductVariant, ProductVariantAttribute, ProductVariantAttributeInput, ProductVariantAttributeInputSchema, ProductVariantAttributeSchema, ProductVariantSchema, PropertiesTableComponentConfig, PropertiesTableComponentConfigSchema, SelectionComponentConfig, SelectionComponentConfigInputSchema, Shape, ShapeComponent, ShapeComponentConfig, ShapeComponentConfigInput, ShapeComponentConfigInputSchema, ShapeComponentConfigSchema, ShapeComponentInput, ShapeComponentInputSchema, ShapeComponentSchema, ShapeComponentType, ShapeComponentTypeEnum, ShapeSchema, ShapeType, ShapeTypeEnum, Tenant, TenantDefaults, TenantDefaultsInput, TenantDefaultsInputSchema, TenantDefaultsSchema, TenantSchema, Topic, TopicSchema, UpdateDocumentInput, UpdateDocumentInputSchema, UpdateFolderInput, UpdateFolderInputSchema, UpdateProductInput, UpdateProductInputSchema, UpdateProductVariantInput, UpdateProductVariantInputSchema, UpdateShapeInput, UpdateShapeInputSchema, UpdateTopicInput, UpdateTopicInputSchema, basicShapeSchema };
