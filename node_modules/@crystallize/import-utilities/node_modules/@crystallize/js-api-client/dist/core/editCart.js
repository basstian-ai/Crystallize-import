"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setCartCustomer = exports.setCartMeta = exports.removeCartItem = exports.addSkuItem = exports.placeCart = void 0;
const json_to_graphql_query_1 = require("json-to-graphql-query");
const placeCart = async (cartId, { apiClient }, extraQuery) => {
    const mutation = {
        place: {
            __args: {
                id: cartId,
            },
            id: true,
            ...extraQuery,
        },
    };
    const response = await apiClient.shopCartApi((0, json_to_graphql_query_1.jsonToGraphQLQuery)({ mutation }));
    return response.place;
};
exports.placeCart = placeCart;
const addSkuItem = async (cartId, sku, quantity, { apiClient }, extraQuery) => {
    const mutation = {
        addSkuItem: {
            __args: {
                id: cartId,
                input: {
                    sku,
                    quantity,
                },
            },
            id: true,
            ...extraQuery,
        },
    };
    const response = await apiClient.shopCartApi((0, json_to_graphql_query_1.jsonToGraphQLQuery)({ mutation }));
    return response.addSkuItem;
};
exports.addSkuItem = addSkuItem;
const removeCartItem = async (cartId, sku, quantity, { apiClient }, extraQuery) => {
    const mutation = {
        removeCartItem: {
            __args: {
                id: cartId,
                sku,
                quantity,
            },
            id: true,
            ...extraQuery,
        },
    };
    const response = await apiClient.shopCartApi((0, json_to_graphql_query_1.jsonToGraphQLQuery)({ mutation }));
    return response.removeCartItem;
};
exports.removeCartItem = removeCartItem;
const setCartMeta = async (cartId, meta, merge, { apiClient }, extraQuery) => {
    const mutation = {
        setMeta: {
            __args: {
                id: cartId,
                merge,
                meta,
            },
            id: true,
            ...extraQuery,
        },
    };
    const response = await apiClient.shopCartApi((0, json_to_graphql_query_1.jsonToGraphQLQuery)({ mutation }));
    return response.setMeta;
};
exports.setCartMeta = setCartMeta;
const setCartCustomer = async (cartId, customer, isGuest, { apiClient }, extraQuery) => {
    const mutation = {
        setCustomer: {
            __args: {
                id: cartId,
                input: {
                    isGuest,
                    ...customer,
                },
            },
            id: true,
            ...extraQuery,
        },
    };
    const response = await apiClient.shopCartApi((0, json_to_graphql_query_1.jsonToGraphQLQuery)({ mutation }));
    return response.setCustomer;
};
exports.setCartCustomer = setCartCustomer;
//# sourceMappingURL=editCart.js.map