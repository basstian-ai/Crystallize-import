"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createVideosInput = void 0;
const utils_1 = require("../utils");
const createImagesInput_1 = require("./createImagesInput");
async function createVideosInput(props) {
    var _a;
    const { videos, language, context, onUpdate } = props;
    const vids = [];
    for (let i = 0; i < (videos === null || videos === void 0 ? void 0 : videos.length); i++) {
        const video = videos[i];
        let { key } = video;
        if (!key) {
            try {
                const uploadResult = await context.uploadFileFromUrl(video.src);
                if (uploadResult) {
                    key = uploadResult.key;
                    // Store the values so that we don't re-upload again during import
                    video.key = uploadResult.key;
                }
            }
            catch (e) {
                onUpdate({
                    error: {
                        code: 'UPLOAD_FAILED',
                        message: `Could not upload video "${JSON.stringify(video)}". Reason: ${(_a = e.message) !== null && _a !== void 0 ? _a : 'unknown'}`,
                    },
                });
            }
        }
        if (key) {
            vids.push(Object.assign({ key, title: (0, utils_1.getTranslation)(video.title, language) }, (video.thumbnails && {
                thumbnails: await (0, createImagesInput_1.createImagesInput)({
                    images: video.thumbnails,
                    language,
                    onUpdate,
                    context,
                }),
            })));
        }
    }
    return vids;
}
exports.createVideosInput = createVideosInput;
