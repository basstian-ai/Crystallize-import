"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createImagesInput = void 0;
const utils_1 = require("../utils");
const createRichTextInput_1 = require("./createRichTextInput");
async function createImagesInput(props) {
    var _a;
    const { images, language, onUpdate, context } = props;
    const imgs = [];
    for (let i = 0; i < (images === null || images === void 0 ? void 0 : images.length); i++) {
        const image = images[i];
        let { key, mimeType } = image;
        if (!key) {
            try {
                const uploadResult = await context.uploadFileFromUrl(image.src, image.fileName);
                if (uploadResult) {
                    key = uploadResult.key;
                    mimeType = uploadResult.mimeType;
                    // Store the values so that we don't re-upload again during import
                    image.key = uploadResult.key;
                    image.mimeType = uploadResult.mimeType;
                }
            }
            catch (e) {
                onUpdate({
                    error: {
                        code: 'UPLOAD_FAILED',
                        message: `Could not upload image "${JSON.stringify(image)}". Reason: ${(_a = e.message) !== null && _a !== void 0 ? _a : 'unknown'}`,
                    },
                });
            }
        }
        if (key) {
            imgs.push(Object.assign({ key,
                mimeType, altText: (0, utils_1.getTranslation)(image.altText, language) }, (image.caption && {
                caption: (0, createRichTextInput_1.createRichTextInput)(image.caption, language),
            })));
        }
    }
    return imgs;
}
exports.createImagesInput = createImagesInput;
