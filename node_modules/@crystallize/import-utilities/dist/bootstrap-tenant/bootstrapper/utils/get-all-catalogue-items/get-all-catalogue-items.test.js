"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = __importDefault(require("ava"));
const utils_1 = require("./utils");
(0, ava_1.default)('pathValidator should work with single level paths', (t) => {
    const validator = (0, utils_1.buildPathShouldBeIncludedValidator)('/shop');
    t.is(true, validator('/shop').descendants);
    t.is(true, validator('/shop').thisItem);
    t.is(true, validator('/shop/product').thisItem);
    t.is(true, validator('/shop2/product').thisItem);
    t.is(true, validator('/').descendants);
    t.is(false, validator('/prods').descendants);
});
(0, ava_1.default)('pathValidator should work with nested paths', (t) => {
    const validator = (0, utils_1.buildPathShouldBeIncludedValidator)('/products/shoes');
    t.is(true, validator('/products/shoes').thisItem);
    t.is(true, validator('/products/shoes').descendants);
    t.is(true, validator('/products').descendants);
    t.is(false, validator('/shoes').descendants);
    t.is(false, validator('/').thisItem);
});
(0, ava_1.default)('final filtering should work', (t) => {
    const basePath = '/products/shoes/shoe';
    const firstShoe = {
        name: 'first',
        cataloguePath: '/products/shoes/shoe-first',
        shape: '',
    };
    const secondShoe = {
        name: 'second',
        cataloguePath: '/products/shoes/shoe-second',
        shape: '',
    };
    const allCatalogueItemsForLanguage = [
        {
            name: 'Shoes',
            cataloguePath: '/products/shoes',
            shape: 'default-folder',
            children: [firstShoe, secondShoe],
        },
    ];
    t.deepEqual([firstShoe, secondShoe], (0, utils_1.getOnlyItemsWithPathStartingWith)(basePath, allCatalogueItemsForLanguage));
});
(0, ava_1.default)('removeUnpublishedFolderFieldIndicator', (t) => {
    t.deepEqual((0, utils_1.removeUnpublishedFolderFieldIndicator)([
        {
            name: {
                en: utils_1.unpublishedFolderFieldIndicator,
                no: 'navn',
            },
            shape: '',
        },
    ]), [
        {
            name: {
                no: 'navn',
            },
            shape: '',
        },
    ]);
});
